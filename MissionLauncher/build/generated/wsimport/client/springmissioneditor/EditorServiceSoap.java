
package springmissioneditor;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "EditorServiceSoap", targetNamespace = "http://SpringMissionEditor/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EditorServiceSoap {


    /**
     * 
     * @param text
     * @param nick
     * @param missionID
     */
    @WebMethod(operationName = "AddComment", action = "http://SpringMissionEditor/AddComment")
    @RequestWrapper(localName = "AddComment", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.AddComment")
    @ResponseWrapper(localName = "AddCommentResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.AddCommentResponse")
    public void addComment(
        @WebParam(name = "nick", targetNamespace = "http://SpringMissionEditor/")
        String nick,
        @WebParam(name = "missionID", targetNamespace = "http://SpringMissionEditor/")
        int missionID,
        @WebParam(name = "text", targetNamespace = "http://SpringMissionEditor/")
        String text);

    /**
     * 
     * @param author
     * @param missionID
     * @param password
     */
    @WebMethod(operationName = "DeleteMission", action = "http://SpringMissionEditor/DeleteMission")
    @RequestWrapper(localName = "DeleteMission", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.DeleteMission")
    @ResponseWrapper(localName = "DeleteMissionResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.DeleteMissionResponse")
    public void deleteMission(
        @WebParam(name = "missionID", targetNamespace = "http://SpringMissionEditor/")
        int missionID,
        @WebParam(name = "author", targetNamespace = "http://SpringMissionEditor/")
        String author,
        @WebParam(name = "password", targetNamespace = "http://SpringMissionEditor/")
        String password);

    /**
     * 
     * @param missionName
     * @return
     *     returns springmissioneditor.MissionData
     */
    @WebMethod(operationName = "GetMission", action = "http://SpringMissionEditor/GetMission")
    @WebResult(name = "GetMissionResult", targetNamespace = "http://SpringMissionEditor/")
    @RequestWrapper(localName = "GetMission", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.GetMission")
    @ResponseWrapper(localName = "GetMissionResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.GetMissionResponse")
    public MissionData getMission(
        @WebParam(name = "missionName", targetNamespace = "http://SpringMissionEditor/")
        String missionName);

    /**
     * 
     * @param missionID
     * @return
     *     returns springmissioneditor.MissionData
     */
    @WebMethod(operationName = "GetMissionByID", action = "http://SpringMissionEditor/GetMissionByID")
    @WebResult(name = "GetMissionByIDResult", targetNamespace = "http://SpringMissionEditor/")
    @RequestWrapper(localName = "GetMissionByID", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.GetMissionByID")
    @ResponseWrapper(localName = "GetMissionByIDResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.GetMissionByIDResponse")
    public MissionData getMissionByID(
        @WebParam(name = "missionID", targetNamespace = "http://SpringMissionEditor/")
        int missionID);

    /**
     * 
     * @param missionID
     * @return
     *     returns springmissioneditor.ArrayOfScoreEntry
     */
    @WebMethod(operationName = "GetScores", action = "http://SpringMissionEditor/GetScores")
    @WebResult(name = "GetScoresResult", targetNamespace = "http://SpringMissionEditor/")
    @RequestWrapper(localName = "GetScores", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.GetScores")
    @ResponseWrapper(localName = "GetScoresResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.GetScoresResponse")
    public ArrayOfScoreEntry getScores(
        @WebParam(name = "missionID", targetNamespace = "http://SpringMissionEditor/")
        int missionID);

    /**
     * 
     * @param missionID
     * @return
     *     returns springmissioneditor.ArrayOfCommentInfo
     */
    @WebMethod(operationName = "ListComments", action = "http://SpringMissionEditor/ListComments")
    @WebResult(name = "ListCommentsResult", targetNamespace = "http://SpringMissionEditor/")
    @RequestWrapper(localName = "ListComments", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.ListComments")
    @ResponseWrapper(localName = "ListCommentsResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.ListCommentsResponse")
    public ArrayOfCommentInfo listComments(
        @WebParam(name = "missionID", targetNamespace = "http://SpringMissionEditor/")
        int missionID);

    /**
     * 
     * @return
     *     returns springmissioneditor.ArrayOfMissionInfo
     */
    @WebMethod(operationName = "ListMissionInfos", action = "http://SpringMissionEditor/ListMissionInfos")
    @WebResult(name = "ListMissionInfosResult", targetNamespace = "http://SpringMissionEditor/")
    @RequestWrapper(localName = "ListMissionInfos", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.ListMissionInfos")
    @ResponseWrapper(localName = "ListMissionInfosResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.ListMissionInfosResponse")
    public ArrayOfMissionInfo listMissionInfos();

    /**
     * 
     * @param missionID
     * @param rating
     */
    @WebMethod(operationName = "Rate", action = "http://SpringMissionEditor/Rate")
    @RequestWrapper(localName = "Rate", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.Rate")
    @ResponseWrapper(localName = "RateResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.RateResponse")
    public void rate(
        @WebParam(name = "missionID", targetNamespace = "http://SpringMissionEditor/")
        int missionID,
        @WebParam(name = "rating", targetNamespace = "http://SpringMissionEditor/")
        double rating);

    /**
     * 
     * @param author
     * @param mission
     * @param password
     */
    @WebMethod(operationName = "SendMission", action = "http://SpringMissionEditor/SendMission")
    @RequestWrapper(localName = "SendMission", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.SendMission")
    @ResponseWrapper(localName = "SendMissionResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.SendMissionResponse")
    public void sendMission(
        @WebParam(name = "mission", targetNamespace = "http://SpringMissionEditor/")
        MissionData mission,
        @WebParam(name = "author", targetNamespace = "http://SpringMissionEditor/")
        String author,
        @WebParam(name = "password", targetNamespace = "http://SpringMissionEditor/")
        String password);

    /**
     * 
     * @param missionName
     * @param playerName
     * @param timeSeconds
     * @param score
     */
    @WebMethod(operationName = "SubmitScore", action = "http://SpringMissionEditor/SubmitScore")
    @RequestWrapper(localName = "SubmitScore", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.SubmitScore")
    @ResponseWrapper(localName = "SubmitScoreResponse", targetNamespace = "http://SpringMissionEditor/", className = "springmissioneditor.SubmitScoreResponse")
    public void submitScore(
        @WebParam(name = "missionName", targetNamespace = "http://SpringMissionEditor/")
        String missionName,
        @WebParam(name = "playerName", targetNamespace = "http://SpringMissionEditor/")
        String playerName,
        @WebParam(name = "score", targetNamespace = "http://SpringMissionEditor/")
        int score,
        @WebParam(name = "timeSeconds", targetNamespace = "http://SpringMissionEditor/")
        int timeSeconds);

}
